<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.hstc.dao.AcademicMapper">
  <resultMap id="BaseResultMap" type="cn.edu.hstc.pojo.Academic">
    <id column="acad_id" jdbcType="INTEGER" property="acadId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="thesis_name" jdbcType="VARCHAR" property="thesisName" />
    <result column="novon" jdbcType="VARCHAR" property="novon" />
    <result column="releasing_code" jdbcType="VARCHAR" property="releasingCode" />
    <result column="publication_level" jdbcType="VARCHAR" property="publicationLevel" />
    <result column="periodical" jdbcType="VARCHAR" property="periodical" />
    <result column="publish_journals" jdbcType="VARCHAR" property="publishJournals" />
    <result column="collection_situation" jdbcType="VARCHAR" property="collectionSituation" />
    <result column="author_rank" jdbcType="VARCHAR" property="authorRank" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="file_id" jdbcType="INTEGER" property="fileId" />
    <association property="filepath" javaType="cn.edu.hstc.pojo.Filepath">
      <result column="url" property="url"/>
    </association>
  </resultMap>

  <sql id="Base_Column_List">
    acad_id, create_time, update_time, deleted, thesis_name, novon, releasing_code, publication_level,
    periodical, publish_journals, collection_situation, author_rank, category, user_id,
    file_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from academic
    where acad_id = #{acadId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from academic
    where acad_id = #{acadId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.hstc.pojo.Academic">
    insert into academic (acad_id, create_time, update_time, 
      deleted, thesis_name, novon,
      releasing_code, publication_level, periodical,
      publish_journals, collection_situation, author_rank, 
      category, user_id, file_id
      )
    values (#{acadId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=INTEGER}, #{thesisName,jdbcType=VARCHAR}, #{novon,jdbcType=VARCHAR},
      #{releasingCode,jdbcType=VARCHAR}, #{publicationLevel,jdbcType=VARCHAR}, #{periodical,jdbcType=VARCHAR}, 
      #{publishJournals,jdbcType=VARCHAR}, #{collectionSituation,jdbcType=VARCHAR}, #{authorRank,jdbcType=VARCHAR}, 
      #{category,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{fileId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.hstc.pojo.Academic">
    insert into academic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="acadId != null">
        acad_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="thesisName != null">
        thesis_name,
      </if>
      <if test="novon != null">
        novon,
      </if>
      <if test="releasingCode != null">
        releasing_code,
      </if>
      <if test="publicationLevel != null">
        publication_level,
      </if>
      <if test="periodical != null">
        periodical,
      </if>
      <if test="publishJournals != null">
        publish_journals,
      </if>
      <if test="collectionSituation != null">
        collection_situation,
      </if>
      <if test="authorRank != null">
        author_rank,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="acadId != null">
        #{acadId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="thesisName != null">
        #{thesisName,jdbcType=VARCHAR},
      </if>
      <if test="novon != null">
        #{novon,jdbcType=VARCHAR},
      </if>
      <if test="releasingCode != null">
        #{releasingCode,jdbcType=VARCHAR},
      </if>
      <if test="publicationLevel != null">
        #{publicationLevel,jdbcType=VARCHAR},
      </if>
      <if test="periodical != null">
        #{periodical,jdbcType=VARCHAR},
      </if>
      <if test="publishJournals != null">
        #{publishJournals,jdbcType=VARCHAR},
      </if>
      <if test="collectionSituation != null">
        #{collectionSituation,jdbcType=VARCHAR},
      </if>
      <if test="authorRank != null">
        #{authorRank,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.hstc.pojo.Academic">
    update academic
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="thesisName != null">
        thesis_name = #{thesisName,jdbcType=VARCHAR},
      </if>
      <if test="novon != null">
        novon = #{novon,jdbcType=VARCHAR},
      </if>
      <if test="releasingCode != null">
        releasing_code = #{releasingCode,jdbcType=VARCHAR},
      </if>
      <if test="publicationLevel != null">
        publication_level = #{publicationLevel,jdbcType=VARCHAR},
      </if>
      <if test="periodical != null">
        periodical = #{periodical,jdbcType=VARCHAR},
      </if>
      <if test="publishJournals != null">
        publish_journals = #{publishJournals,jdbcType=VARCHAR},
      </if>
      <if test="collectionSituation != null">
        collection_situation = #{collectionSituation,jdbcType=VARCHAR},
      </if>
      <if test="authorRank != null">
        author_rank = #{authorRank,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null">
        file_id = #{fileId,jdbcType=INTEGER},
      </if>
    </set>
    where acad_id = #{acadId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.hstc.pojo.Academic">
    update academic
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER},
      thesis_name = #{thesisName,jdbcType=VARCHAR},
      novon = #{novon,jdbcType=VARCHAR},
      releasing_code = #{releasingCode,jdbcType=VARCHAR},
      publication_level = #{publicationLevel,jdbcType=VARCHAR},
      periodical = #{periodical,jdbcType=VARCHAR},
      publish_journals = #{publishJournals,jdbcType=VARCHAR},
      collection_situation = #{collectionSituation,jdbcType=VARCHAR},
      author_rank = #{authorRank,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      file_id = #{fileId,jdbcType=INTEGER}
    where acad_id = #{acadId,jdbcType=INTEGER}
  </update>

  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
	acad.acad_id,
	acad.deleted,
	acad.thesis_name,
	acad.novon,
	acad.releasing_code,
	acad.publication_level,
	acad.publish_journals,
	acad.periodical,
	acad.collection_situation,
	acad.author_rank,
	acad.category,
	f.url
    FROM
	academic AS acad
    JOIN filepath AS f ON f.file_id = acad.file_id
    WHERE
    acad.user_id=#{user_id}
  </select>

  <select id="getAcademicCountByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select COUNT(*)
    from academic
    where user_id=#{user_id}
  </select>
</mapper>